{
  "useIntl": {
    "prefix": "useIntl",
    "body": ["const intl = useIntl();"],
    "description": "useIntl shortcut"
  },
  "formatMessage": {
    "prefix": "fmtMsg",
    "body": ["intl.formatMessage({ id: '${0:messageId}' })"],
    "description": "useIntl formatMessage shortcut"
  },
  "fix": {
    "prefix": "fix",
    "body": ["$LINE_COMMENT FIX: $0"],
    "description": "create a FIX comment"
  },
  "note": {
    "prefix": "note",
    "body": ["$LINE_COMMENT NOTE: $0"],
    "description": "create a NOTE comment"
  },
  "todo": {
    "prefix": "todo",
    "body": ["$LINE_COMMENT TODO: $0"],
    "description": "create a TODO comment"
  },
  "useHook": {
    "prefix": "ruh",
    "body": ["export function $TM_FILENAME_BASE() {", "  $0", "}"],
    "description": "create a react hook function"
  },
  "useCallback": {
    "prefix": "ruc",
    "body": ["const ${1:variable} = useCallback(() => {", "  $0", "}, []);"],
    "description": "create a react useCallback skeleton"
  },
  "useMemo": {
    "prefix": "rum",
    "body": [
      "const ${1:variable} = useMemo(() => {",
      "  $0",
      "  return undefined;",
      "}, []);"
    ],
    "description": "create a react useMemo skeleton"
  },
  "useRef": {
    "prefix": "rur",
    "body": ["const ${1:variable} = useRef<${2:type}>($0);"],
    "description": "create a react useRef skeleton"
  }
}
